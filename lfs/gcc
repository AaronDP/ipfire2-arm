###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007-2011  IPFire Team  <info@ipfire.org>                     #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

###############################################################################
# Definitions
###############################################################################

include Config

VER        = 4.1.2

THISAPP    = gcc-$(VER)
DL_FILE    = $(THISAPP).tar.bz2
DL_FROM    = $(URL_IPFIRE)
DIR_APP    = $(DIR_SRC)/$(THISAPP)

# Normal build or /tools build.
#
ifeq "$(ROOT)" ""
  TARGET = $(DIR_INFO)/$(THISAPP)
  EXTRA_CONFIG = --prefix=/usr \
		--libexecdir=/usr/lib \
		--enable-shared \
		--enable-threads=posix \
		--enable-__cxa_atexit \
		--enable-clocale=gnu \
		--enable-languages=c,c++ \
		--disable-nls
  EXTRA_MAKE =
  EXTRA_INSTALL =
else
ifeq "$(PASS)" "1"
  TARGET = $(DIR_INFO)/$(THISAPP)-tools1
  EXTRA_CONFIG = --prefix=/tools \
		--with-local-prefix=/tools \
		--disable-nls \
		--enable-shared \
		--enable-languages=c \
		--disable-bootstrap
  EXTRA_MAKE = 
  EXTRA_INSTALL = 
else
  TARGET = $(DIR_INFO)/$(THISAPP)-tools2
  EXTRA_CONFIG = --prefix=/tools \
		--with-local-prefix=/tools \
		--enable-clocale=gnu \
		--enable-shared \
		--enable-threads=posix \
		--enable-__cxa_atexit \
		--enable-languages=c,c++ \
		--disable-libstdcxx-pch
  EXTRA_MAKE = 
  EXTRA_INSTALL = 
endif
endif

ifeq "$(MACHINE_TYPE)" "arm"
	EXTRA_CONFIG += \
		--build=$(BUILDTARGET) \
		--host=$(BUILDTARGET) \
		--target=$(BUILDTARGET) \
		--with-float=soft \
		--disable-libmudflap \
		--disable-libssp \
		--disable-libgomp \
		--enable-threads=posix \
		--enable-long-long \
		--enable-c99 \
		--enable-__cxa_atexit \
		--disable-multilib
else
	EXTRA_CONFIG += --build=$(BUILDTARGET) --host=$(BUILDTARGET) \
		--target=$(BUILDTARGET)
endif

export XCFLAGS = $(CFLAGS)
export TCFLAGS = $(CFLAGS)

###############################################################################
# Top-level Rules
###############################################################################
objects = $(DL_FILE)

$(DL_FILE) = $(DL_FROM)/$(DL_FILE)

$(DL_FILE)_MD5 = a4a3eb15c96030906d8494959eeda23c

install : $(TARGET)

check : $(patsubst %,$(DIR_CHK)/%,$(objects))

download :$(patsubst %,$(DIR_DL)/%,$(objects))

md5 : $(subst %,%_MD5,$(objects))

###############################################################################
# Downloading, checking, md5sum
###############################################################################

$(patsubst %,$(DIR_CHK)/%,$(objects)) :
	@$(CHECK)

$(patsubst %,$(DIR_DL)/%,$(objects)) :
	@$(LOAD)

$(subst %,%_MD5,$(objects)) :
	@$(MD5)

###############################################################################
# Installation Details
###############################################################################

$(TARGET) : $(patsubst %,$(DIR_DL)/%,$(objects))
	@$(PREBUILD)
	@rm -rf $(DIR_APP) $(DIR_SRC)/gcc-build && cd $(DIR_SRC) && tar jxf $(DIR_DL)/$(DL_FILE)
	cd $(DIR_APP) && patch -Np1 < $(DIR_SRC)/src/patches/$(THISAPP)-fix_linker_version_detection.patch
	@mkdir $(DIR_SRC)/gcc-build

	cd $(DIR_APP) && patch -Np1 -i $(DIR_SRC)/src/patches/gcc-4.1.2-gcc_eh.patch
	cd $(DIR_APP) && patch -Np1 -i $(DIR_SRC)/src/patches/gcc-4.1.2-arm-linux-soft-float.patch

ifeq "$(ROOT)" ""
	cd $(DIR_APP) && sed -i 's/install_to_$$(INSTALL_DEST) //' libiberty/Makefile.in
	cd $(DIR_APP) && sed -i 's/^XCFLAGS =$$/& -fomit-frame-pointer/' gcc/Makefile.in
	cd $(DIR_APP) && sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
	cd $(DIR_APP) && sed -i 's/@have_mktemp_command@/yes/' gcc/gccbug.in

	cd $(DIR_SRC)/gcc-build && $(DIR_APP)/configure $(EXTRA_CONFIG)
	cd $(DIR_SRC)/gcc-build && make $(MAKETUNING) $(EXTRA_MAKE)
	cd $(DIR_SRC)/gcc-build && make $(EXTRA_INSTALL) install
	ln -sfv ../usr/bin/cpp /lib
	ln -sfv gcc /usr/bin/cc
else
ifeq "$(PASS)" "1"
	cd $(DIR_SRC)/gcc-build && $(DIR_APP)/configure $(EXTRA_CONFIG)
	cd $(DIR_SRC)/gcc-build && make $(MAKETUNING) $(EXTRA_MAKE)
	cd $(DIR_SRC)/gcc-build && make $(EXTRA_INSTALL) install
	ln -sfv gcc /tools/bin/cc
	ln -sf ccache $(ROOT)/usr/local/bin/$(BUILDTARGET)-gcc
	ln -sf ccache $(ROOT)/usr/local/bin/$(BUILDTARGET)-g++
	ln -sf ccache $(ROOT)/usr/local/bin/$(BUILDTARGET)-cc
else
	cd $(DIR_APP) && cp -v gcc/Makefile.in{,.orig}
	cd $(DIR_APP) && sed 's@\./fixinc\.sh@-c true@' gcc/Makefile.in.orig > gcc/Makefile.in
	cd $(DIR_APP) && cp -v gcc/Makefile.in{,.tmp}
	cd $(DIR_APP) && sed 's/^XCFLAGS =$\/& -fomit-frame-pointer/' gcc/Makefile.in.tmp \
				> gcc/Makefile.in
	cd $(DIR_APP) && patch -Np1 < $(DIR_SRC)/src/patches/$(THISAPP)-specs-1.patch
	cd $(DIR_SRC)/gcc-build && $(DIR_APP)/configure $(EXTRA_CONFIG)
	cd $(DIR_SRC)/gcc-build && make $(MAKETUNING) $(EXTRA_MAKE)
	cd $(DIR_SRC)/gcc-build && make $(EXTRA_INSTALL) install
endif
endif
	@rm -rf $(DIR_APP) $(DIR_SRC)/gcc-build
	@$(POSTBUILD)
