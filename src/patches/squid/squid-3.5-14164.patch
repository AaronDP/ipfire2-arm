------------------------------------------------------------
revno: 14164
revision-id: squid3@treenet.co.nz-20170529063645-qmu68scq9go0wbqr
parent: squid3@treenet.co.nz-20170529062945-gf7u7dukaumjof74
author: Alex Rousskov <rousskov@measurement-factory.com>
committer: Amos Jeffries <squid3@treenet.co.nz>
branch nick: 3.5
timestamp: Mon 2017-05-29 18:36:45 +1200
message:
  Fix xstrndup() documentation, callers. Disclosed implementation bugs.
  
  xstrndup() does not work like strndup(3), and some callers got confused:
  
  1. When n is the str length or less, standard strndup(str,n) copies all
     n bytes but our xstrndup(str,n) drops the last one. Thus, all callers
     must add one to the desired result length when calling xstrndup().
     Most already do, but it is often hard to see due to low code quality
     (e.g., one must remember that MAX_URL is not the maximum URL length).
  
  2. xstrndup() also assumes that the source string is 0-terminated. This
     dangerous assumption does not contradict many official strndup(3)
     descriptions, but that lack of contradiction is actually a recently
     fixed POSIX documentation bug (i.e., correct implementations must not
     assume 0-termination): http://austingroupbugs.net/view.php?id=1019
  
  The OutOfBoundsException bug led to truncated exception messages.
  
  The ESI bug led to truncated 'literal strings', but I do not know what
  that means in terms of user impact. That ESI fix is untested.
  
  cachemgr.cc bug was masked by the fact that the buffer ends with \n
  that is unused and stripped by the custom xstrtok() implementation.
  
  TODO. Fix xstrndup() implementation (and rename the function so that
  fixed callers do not misbehave if carelessly ported to older Squids).
------------------------------------------------------------
# Bazaar merge directive format 2 (Bazaar 0.90)
# revision_id: squid3@treenet.co.nz-20170529063645-qmu68scq9go0wbqr
# target_branch: http://bzr.squid-cache.org/bzr/squid3/3.5
# testament_sha1: 7321050a4405a155a8fe02f7125e446b9516dd51
# timestamp: 2017-05-29 06:51:18 +0000
# source_branch: http://bzr.squid-cache.org/bzr/squid3/3.5
# base_revision_id: squid3@treenet.co.nz-20170529062945-\
#   gf7u7dukaumjof74
# 
# Begin patch
=== modified file 'compat/xstring.h'
--- compat/xstring.h	2017-01-01 00:16:45 +0000
+++ compat/xstring.h	2017-05-29 06:36:45 +0000
@@ -41,7 +41,10 @@
 char *xstrncpy(char *dst, const char *src, size_t n);
 
 /**
- * xstrndup() - same as strndup(3).  Used for portability.
+ * xstrndup() - Somewhat similar(XXX) to strndup(3): Allocates up to n bytes,
+ * while strndup(3) copies up to n bytes and allocates up to n+1 bytes
+ * to fit the terminating character. Assumes s is 0-terminated (another XXX).
+ *
  * Never returns NULL; fatal on error.
  *
  * Sets errno to EINVAL if a NULL pointer or negative

=== modified file 'src/SBufExceptions.cc'
--- src/SBufExceptions.cc	2017-01-01 00:16:45 +0000
+++ src/SBufExceptions.cc	2017-05-29 06:36:45 +0000
@@ -25,9 +25,7 @@
         explanatoryText.appendf(" in file %s", aFileName);
     explanatoryText.appendf(" while accessing position %d in a SBuf long %d",
                             pos, throwingBuf.length());
-    // we can safely alias c_str as both are local to the object
-    //  and will not further manipulated.
-    message = xstrndup(explanatoryText.c_str(),explanatoryText.length());
+    message = xstrdup(explanatoryText.c_str());
 }
 
 OutOfBoundsException::~OutOfBoundsException() throw()

=== modified file 'src/esi/Expression.cc'
--- src/esi/Expression.cc	2017-01-01 00:16:45 +0000
+++ src/esi/Expression.cc	2017-05-29 06:36:45 +0000
@@ -743,7 +743,7 @@
             /* Special case for zero length strings */
 
             if (t - s - 1)
-                rv.value.string = xstrndup(s + 1, t - s - 1);
+                rv.value.string = xstrndup(s + 1, t - (s + 1) + 1);
             else
                 rv.value.string = static_cast<char *>(xcalloc(1,1));
 

=== modified file 'tools/cachemgr.cc'
--- tools/cachemgr.cc	2017-01-01 00:16:45 +0000
+++ tools/cachemgr.cc	2017-05-29 06:36:45 +0000
@@ -440,7 +440,7 @@
         return;
     }
 
-    buf_copy = x = xstrndup(buf, bufLen);
+    buf_copy = x = xstrndup(buf, bufLen+1);
 
     a = xstrtok(&x, '\t');
 

