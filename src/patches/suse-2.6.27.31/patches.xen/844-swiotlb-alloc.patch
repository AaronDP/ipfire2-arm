From: http://xenbits.xensource.com/linux-2.6.18-xen.hg?rev/87c84f7dd850
# HG changeset 844 patch
# User Keir Fraser <keir.fraser@citrix.com>
# Date 1237539658 0
# Node ID 87c84f7dd8507edc58c13f1debfad5a05aa03128
# Parent  0a9cdf1dbad6127156609dcf389afeac09081210
Subject: swiotlb allocations do not need to come from low memory
References: bnc#482614

Other than on native, where using the _low variants of alloc_bootmem()
is indeed a requirement for swiotlb, on Xen this is not needed. Using
the _low variants has the potential of preventing systems from booting
when they have lots of memory, due to the way the bootmem allocator
works: It allocates memory from bottom to top. Thus, if other large
(but not _low) allocations (memmap, large system hash tables)
mostly consume the memory below 4Gb, the swiotlb allocations can
fail. (This is equally so for native, but cannot be that easily fixed
there.)

Signed-off-by: Jan Beulich <jbeulich@novell.com>

--- sle11-2009-03-24.orig/lib/swiotlb-xen.c	2009-03-24 10:00:15.000000000 +0100
+++ sle11-2009-03-24/lib/swiotlb-xen.c	2009-03-20 10:00:58.000000000 +0100
@@ -151,7 +151,7 @@ swiotlb_init_with_default_size (size_t d
 	/*
 	 * Get IO TLB memory from the low pages
 	 */
-	iotlb_virt_start = alloc_bootmem_low_pages(bytes);
+	iotlb_virt_start = alloc_bootmem_pages(bytes);
 	if (!iotlb_virt_start)
 		panic("Cannot allocate SWIOTLB buffer!\n");
 
@@ -196,7 +196,7 @@ swiotlb_init_with_default_size (size_t d
 	/*
 	 * Get the overflow emergency buffer
 	 */
-	io_tlb_overflow_buffer = alloc_bootmem_low(io_tlb_overflow);
+	io_tlb_overflow_buffer = alloc_bootmem(io_tlb_overflow);
 	if (!io_tlb_overflow_buffer)
 		panic("Cannot allocate SWIOTLB overflow buffer!\n");
 
