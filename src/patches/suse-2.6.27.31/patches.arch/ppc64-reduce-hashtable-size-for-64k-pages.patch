From: Anton Blanchard <anton@samba.org>
Subject: powerpc/mm: Reduce hashtable size when using 64kB pages
Date:   Fri Feb 13 11:57:30 2009 +0000
References: bnc#501160
Patch-upstream: yes
Git: 13870b657578bcce167978ee93dc02bf54e3beb0

    powerpc/mm: Reduce hashtable size when using 64kB pages
    
    At the moment we size the hashtable based on 4kB pages / 2, even on a
    64kB kernel. This results in a hashtable that is much larger than it
    needs to be.
    
    Grab the real page size and size the hashtable based on that
    
    Note: This only has effect on non hypervisor machines.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Acked-by: Nick Piggin <npiggin@suse.de>

---
 arch/powerpc/mm/hash_utils_64.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/arch/powerpc/mm/hash_utils_64.c
+++ b/arch/powerpc/mm/hash_utils_64.c
@@ -514,7 +514,7 @@ static int __init htab_dt_scan_pftsize(u
 
 static unsigned long __init htab_get_table_size(void)
 {
-	unsigned long mem_size, rnd_mem_size, pteg_count;
+	unsigned long mem_size, rnd_mem_size, pteg_count, psize;
 
 	/* If hash size isn't already provided by the platform, we try to
 	 * retrieve it from the device-tree. If it's not there neither, we
@@ -532,7 +532,8 @@ static unsigned long __init htab_get_tab
 		rnd_mem_size <<= 1;
 
 	/* # pages / 2 */
-	pteg_count = max(rnd_mem_size >> (12 + 1), 1UL << 11);
+	psize = mmu_psize_defs[mmu_virtual_psize].shift;
+	pteg_count = max(rnd_mem_size >> (psize + 1), 1UL << 11);
 
 	return pteg_count << 7;
 }
