From: Michal Marek <mmarek@suse.cz>
Subject: preserve the kabi checksum of dma_get_required_mask on ia64

Signed-off-by: Michal Marek <mmarek@suse.cz>
Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---
 arch/ia64/include/asm/machvec.h |    8 +++++---
 arch/ia64/pci/pci.c             |   22 +++++++++++-----------
 drivers/base/platform.c         |    9 +++++++++
 3 files changed, 25 insertions(+), 14 deletions(-)

--- a/arch/ia64/include/asm/machvec.h
+++ b/arch/ia64/include/asm/machvec.h
@@ -210,7 +210,6 @@ struct ia64_machine_vector {
 	ia64_mv_dma_sync_sg_for_device *dma_sync_sg_for_device;
 	ia64_mv_dma_mapping_error *dma_mapping_error;
 	ia64_mv_dma_supported *dma_supported;
-	ia64_mv_dma_get_required_mask *dma_get_required_mask;
 	ia64_mv_irq_to_vector *irq_to_vector;
 	ia64_mv_local_vector_to_irq *local_vector_to_irq;
 	ia64_mv_pci_get_legacy_mem_t *pci_get_legacy_mem;
@@ -236,6 +235,9 @@ struct ia64_machine_vector {
 	ia64_mv_teardown_msi_irq_t *teardown_msi_irq;
 	ia64_mv_pci_fixup_bus_t *pci_fixup_bus;
 	ia64_mv_kernel_launch_event_t *kernel_launch_event;
+#ifndef __GENKSYMS__
+	ia64_mv_dma_get_required_mask *dma_get_required_mask;
+#endif
 } __attribute__((__aligned__(16))); /* align attrib? see above comment */
 
 #define MACHVEC_INIT(name)			\
@@ -261,7 +263,6 @@ struct ia64_machine_vector {
 	platform_dma_sync_sg_for_device,	\
 	platform_dma_mapping_error,			\
 	platform_dma_supported,			\
-	platform_dma_get_required_mask,		\
 	platform_irq_to_vector,			\
 	platform_local_vector_to_irq,		\
 	platform_pci_get_legacy_mem,		\
@@ -286,7 +287,8 @@ struct ia64_machine_vector {
 	platform_setup_msi_irq,			\
 	platform_teardown_msi_irq,		\
 	platform_pci_fixup_bus,			\
-	platform_kernel_launch_event            \
+	platform_kernel_launch_event,           \
+	platform_dma_get_required_mask		\
 }
 
 extern struct ia64_machine_vector ia64_mv;
--- a/arch/ia64/pci/pci.c
+++ b/arch/ia64/pci/pci.c
@@ -19,7 +19,6 @@
 #include <linux/ioport.h>
 #include <linux/slab.h>
 #include <linux/spinlock.h>
-#include <linux/bootmem.h>
 
 #include <asm/machvec.h>
 #include <asm/page.h>
@@ -744,6 +743,16 @@ static void __init set_pci_cacheline_siz
 	pci_cache_line_size = (1 << cci.pcci_line_size) / 4;
 }
 
+static int __init pcibios_init(void)
+{
+	set_pci_cacheline_size();
+	return 0;
+}
+
+subsys_initcall(pcibios_init);
+
+#include <linux/bootmem.h>
+
 u64 ia64_dma_get_required_mask(struct device *dev)
 {
 	u32 low_totalram = ((max_pfn - 1) << PAGE_SHIFT);
@@ -764,16 +773,7 @@ u64 ia64_dma_get_required_mask(struct de
 }
 EXPORT_SYMBOL_GPL(ia64_dma_get_required_mask);
 
-u64 dma_get_required_mask(struct device *dev)
+u64 ia64_dma_get_required_mask_wrapper(struct device *dev)
 {
 	return platform_dma_get_required_mask(dev);
 }
-EXPORT_SYMBOL_GPL(dma_get_required_mask);
-
-static int __init pcibios_init(void)
-{
-	set_pci_cacheline_size();
-	return 0;
-}
-
-subsys_initcall(pcibios_init);
--- a/drivers/base/platform.c
+++ b/drivers/base/platform.c
@@ -931,4 +931,13 @@ u64 dma_get_required_mask(struct device
 	return mask;
 }
 EXPORT_SYMBOL_GPL(dma_get_required_mask);
+#else
+#ifdef __ia64__
+u64 ia64_dma_get_required_mask_wrapper(struct device *dev);
+u64 dma_get_required_mask(struct device *dev)
+{
+	return ia64_dma_get_required_mask_wrapper(dev);
+}
+EXPORT_SYMBOL_GPL(dma_get_required_mask);
+#endif
 #endif
