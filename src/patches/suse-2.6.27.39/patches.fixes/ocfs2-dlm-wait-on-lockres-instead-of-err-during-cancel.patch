From: Goldwyn Rodrigues <rgoldwyn@novell.com>
Subject: ocfs2/dlm Wait on lockres instead of erroring during cancel
References: bnc#524683
Patch-mainline: queued

If the DLM lock is in progress and someone issues a cancel, let the lock wait.
Added conditions for the process to fall through in case flag is set to
LKM_CANCEL.

Signed-off-by: Goldwyn Rodrigues <rgoldwyn@suse.de>
Signed-off-by: Mark Fasheh <mfasheh@suse.com>

---
 ocfs2/dlm/dlmunlock.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: fs/ocfs2/dlm/dlmunlock.c
===================================================================
--- a/fs/ocfs2/dlm/dlmunlock.c	2009-07-30 16:02:55.000000000 +0200
+++ b/fs/ocfs2/dlm/dlmunlock.c	2009-08-21 18:04:03.000000000 +0200
@@ -122,7 +122,7 @@ static enum dlm_status dlmunlock_common(
 	 * that still has AST's pending... */
 	in_use = !list_empty(&lock->ast_list);
 	spin_unlock(&dlm->ast_lock);
-	if (in_use) {
+	if (in_use && !(flags & LKM_CANCEL)) {
 	       mlog(ML_ERROR, "lockres %.*s: Someone is calling dlmunlock "
 		    "while waiting for an ast!", res->lockname.len,
 		    res->lockname.name);
@@ -131,7 +131,7 @@ static enum dlm_status dlmunlock_common(
 
 	spin_lock(&res->spinlock);
 	if (res->state & DLM_LOCK_RES_IN_PROGRESS) {
-		if (master_node) {
+		if (master_node && !(flags & LKM_CANCEL)) {
 			mlog(ML_ERROR, "lockres in progress!\n");
 			spin_unlock(&res->spinlock);
 			return DLM_FORWARD;
