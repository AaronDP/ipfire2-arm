#!/bin/sh
#
# $Id: rc.network,v 1.10.2.6 2005/07/11 18:38:02 franck78 Exp $
#
eval $(/usr/local/bin/readhash CONFIG_ROOT/ethernet/settings)

echo "Setting up loopback"
ifconfig lo localhost up

echo "Loading MASQ helper modules"
modprobe iptable_nat
modprobe ip_conntrack
modprobe ip_conntrack_ftp
modprobe ip_nat_ftp
modprobe ip_conntrack_h323
modprobe ip_nat_h323
modprobe ip_conntrack_irc
modprobe ip_nat_irc
modprobe ip_conntrack_mms
modprobe ip_nat_mms
modprobe ip_conntrack_pptp
modprobe ip_nat_pptp
modprobe ip_conntrack_proto_gre
modprobe ip_nat_proto_gre
modprobe ip_conntrack_quake3
modprobe ip_nat_quake3

# Remove possible leftover files
rm -f CONFIG_ROOT/red/{active,device,dial-on-demand,dns1,dns2,local-ipaddress,remote-ipaddress,resolv.conf}

# This won't actually do anything unless a PCMCIA controller was
# detected at install time, because /etc/pcmcia.conf won't exist.
/etc/rc.d/rc.pcmcia start
# Now, just in case we found a PCMCIA USB controller, we'll need to reload
# the USB here.
/usr/local/bin/resetusb

# The 'for' loop force driver loading order
for NIC in 0 1 2 3; do
    ETHX="eth${NIC}"
    if [ "$GREEN_DEV" == "$ETHX" ]; then
	if [ "$GREEN_DRIVER" != "" ]; then
	    modprobe $GREEN_DRIVER $GREEN_DRIVER_OPTIONS
        fi
    fi
    if [ "$ORANGE_DEV" == "$ETHX" ]; then
        if [ "$ORANGE_DRIVER" != "" ]; then
	    modprobe $ORANGE_DRIVER $ORANGE_DRIVER_OPTIONS
	fi
    fi
    if [ "$BLUE_DEV" == "$ETHX" ]; then
	if [ "$BLUE_DRIVER" != "" ]; then
	    modprobe $BLUE_DRIVER $BLUE_DRIVER_OPTIONS
	fi
    fi
    if [ "$RED_DEV" == "$ETHX" ]; then
	if [ "$RED_DRIVER" != "" ]; then
	    modprobe $RED_DRIVER $RED_DRIVER_OPTIONS
    	fi
    fi
done

if [ -d /proc/bus/pccard ]; then
	echo "Initializing PCMCIA cardbus modems"
	modprobe serial_cb
fi

echo "Setting up IPCOP firewall rules"
/etc/rc.d/rc.firewall start
echo "Setting up IP Accounting"
/etc/rc.d/helper/writeipac.pl
/usr/sbin/fetchipac -S
echo "Setting IPCOP DMZ pinholes"
/usr/local/bin/setdmzholes

if [ "$BLUE_DEV" != "" ]; then
	echo "Setting up wireless firewall rules"
	/usr/local/bin/restartwireless
fi

echo "Bringing network up"
. /etc/rc.d/rc.netaddress.up
